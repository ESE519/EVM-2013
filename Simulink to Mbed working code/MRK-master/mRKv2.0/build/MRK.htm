<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\build\MRK.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\build\MRK.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.03 [Build 76]: Last Updated: Fri Nov 08 22:09:51 2013
<BR><P>
<H3>Maximum Stack Usage =         72 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
EINT3_IRQHandler &rArr; rf_parse_rx_packet() &rArr; rf_rx_off() &rArr; mrf_write_short(unsigned char, unsigned char) &rArr; nrk_spin_wait_us(unsigned) &rArr; wait_us &rArr; us_ticker_read
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[b1]">_nrk_spin_wait_1us</a>
 <LI><a href="#[b2]">nrk_start_high_ready_task</a>
 <LI><a href="#[4c]">_swap</a>
 <LI><a href="#[18]">PendSV_Handler</a>
 <LI><a href="#[69]">Switch</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[11]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">NMI_Handler</a><BR>
 <LI><a href="#[12]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">HardFault_Handler</a><BR>
 <LI><a href="#[13]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[13]">MemManage_Handler</a><BR>
 <LI><a href="#[14]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14]">BusFault_Handler</a><BR>
 <LI><a href="#[15]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">UsageFault_Handler</a><BR>
 <LI><a href="#[16]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[16]">SVC_Handler</a><BR>
 <LI><a href="#[17]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[17]">DebugMon_Handler</a><BR>
 <LI><a href="#[19]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[19]">SysTick_Handler</a><BR>
 <LI><a href="#[30]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[30]">ADC_IRQHandler</a><BR>
 <LI><a href="#[85]">timer_start</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[85]">timer_start</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[30]">ADC_IRQHandler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[31]">BOD_IRQHandler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[14]">BusFault_Handler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[33]">CAN_IRQHandler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[34]">DMA_IRQHandler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[17]">DebugMon_Handler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[2c]">EINT0_IRQHandler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[2d]">EINT1_IRQHandler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[2e]">EINT2_IRQHandler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[2f]">EINT3_IRQHandler</a> from basic_rf.o(i.EINT3_IRQHandler) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[36]">ENET_IRQHandler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[12]">HardFault_Handler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[24]">I2C0_IRQHandler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[25]">I2C1_IRQHandler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[26]">I2C2_IRQHandler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[35]">I2S_IRQHandler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[38]">MCPWM_IRQHandler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[13]">MemManage_Handler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[11]">NMI_Handler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[2a]">PLL0_IRQHandler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[3a]">PLL1_IRQHandler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[23]">PWM1_IRQHandler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[18]">PendSV_Handler</a> from my_asm.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[39]">QEI_IRQHandler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[37]">RIT_IRQHandler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[2b]">RTC_IRQHandler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[10]">Reset_Handler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[27]">SPI_IRQHandler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[28]">SSP0_IRQHandler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[29]">SSP1_IRQHandler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[16]">SVC_Handler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[19]">SysTick_Handler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[3b]">SystemInit</a> from system_LPC17xx.o(i.SystemInit) referenced from startup_LPC17xx.o(.text)
 <LI><a href="#[1b]">TIMER0_IRQHandler</a> from nrk_timer.o(i.TIMER0_IRQHandler) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[1c]">TIMER1_IRQHandler</a> from nrk_timer.o(i.TIMER1_IRQHandler) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[1d]">TIMER2_IRQHandler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[1e]">TIMER3_IRQHandler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[1f]">UART0_IRQHandler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[20]">UART1_IRQHandler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[21]">UART2_IRQHandler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[22]">UART3_IRQHandler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[32]">USB_IRQHandler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[15]">UsageFault_Handler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[1a]">WDT_IRQHandler</a> from startup_LPC17xx.o(.text) referenced from startup_LPC17xx.o(RESET)
 <LI><a href="#[3e]">__main</a> from __main.o(!!!main) referenced from startup_LPC17xx.o(.text)
 <LI><a href="#[3d]">_nrk_timer_tick</a> from nrk.o(i._nrk_timer_tick) referenced from nrk_cpu.o(i._Z25nrk_stack_pointer_restorev)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[3e]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[3f]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[41]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[95]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[96]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[97]"></a>__decompress</STRONG> (Thumb, 58 bytes, Stack size unknown bytes, __dczerorl.o(!!dczerorl), UNUSED)

<P><STRONG><a name="[98]"></a>__decompress0</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl.o(!!dczerorl), UNUSED)

<P><STRONG><a name="[99]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[45]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[9a]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[9b]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[9c]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[9d]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[9e]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[9f]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[a0]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[a1]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[a2]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[a3]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[a4]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[a5]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[a6]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[a7]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[a8]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[a9]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[aa]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000031))

<P><STRONG><a name="[ab]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[ac]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[ad]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[40]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[ae]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[42]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[44]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[af]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[46]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; rt_OneStep() &rArr; simulinkmodeltoblinkLed_step() &rArr; __aeabi_cdcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[b0]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[b1]"></a>_nrk_spin_wait_1us</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, my_asm.o(.text), UNUSED)

<P><STRONG><a name="[b2]"></a>nrk_start_high_ready_task</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, my_asm.o(.text), UNUSED)

<P><STRONG><a name="[4c]"></a>_swap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, my_asm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0_IRQHandler
</UL>

<P><STRONG><a name="[18]"></a>PendSV_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, my_asm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = PendSV_Handler &rArr; _nrk_timer_tick &rArr; _nrk_scheduler() &rArr; nrk_add_to_readyQ(signed char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nrk_timer_tick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>Switch</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, my_asm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nrk_scheduler()
</UL>

<P><STRONG><a name="[10]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>CAN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>EINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>EINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>EINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>ENET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>MCPWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>PLL0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>PLL1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>PWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>QEI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>RIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>SPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>SSP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>SSP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>EINT3_IRQHandler</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, basic_rf.o(i.EINT3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = EINT3_IRQHandler &rArr; rf_parse_rx_packet() &rArr; rf_rx_off() &rArr; mrf_write_short(unsigned char, unsigned char) &rArr; nrk_spin_wait_us(unsigned) &rArr; wait_us &rArr; us_ticker_read
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mrf_read_short(unsigned char)
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_parse_rx_packet()
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_rx_callback(RF_RX_INFO*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SystemInit</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, system_LPC17xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(.text)
</UL>
<P><STRONG><a name="[1b]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, nrk_timer.o(i.TIMER0_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_swap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, nrk_timer.o(i.TIMER1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC17xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>rf_rx_callback(RF_RX_INFO*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bmac.o(i._Z14rf_rx_callbackP10RF_RX_INFO))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT3_IRQHandler
</UL>

<P><STRONG><a name="[5e]"></a>nrk_int_disable()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, nrk.o(i._Z15nrk_int_disablev))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nrk_scheduler()
</UL>

<P><STRONG><a name="[82]"></a>simulinkmodeltoblinkLed_terminate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, simulinkmodeltoblinkled.o(i._Z33simulinkmodeltoblinkLed_terminatev))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[80]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 238 bytes, Stack size 0 bytes, system_LPC17xx.o(i.SystemCoreClockUpdate))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5a]"></a>mrf_cs_set(unsigned char)</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, mrf24j40.o(i._Z10mrf_cs_seth))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mrf_write_short(unsigned char, unsigned char)
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mrf_read_short(unsigned char)
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mrf_read_long(unsigned short)
</UL>

<P><STRONG><a name="[4d]"></a>rt_OneStep()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, main.o(i._Z10rt_OneStepv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = rt_OneStep() &rArr; simulinkmodeltoblinkLed_step() &rArr; __aeabi_cdcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simulinkmodeltoblinkLed_step()
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4f]"></a>GPIO_SetDir(unsigned char, unsigned, unsigned char)</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, ulib.o(i._Z11GPIO_SetDirhjh))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_SetDir(unsigned char, unsigned, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPointer(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDEBUG()
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initLED()
</UL>

<P><STRONG><a name="[51]"></a>nrk_led_clr(int)</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ulib.o(i._Z11nrk_led_clri))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nrk_led_clr(int) &rArr; nrk_gpio_clr(unsigned) &rArr; GPIO_ClearValue(unsigned char, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrk_gpio_clr(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simulinkmodeltoblinkLed_step()
</UL>

<P><STRONG><a name="[53]"></a>nrk_led_set(int)</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ulib.o(i._Z11nrk_led_seti))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nrk_led_set(int) &rArr; nrk_gpio_set(unsigned) &rArr; GPIO_SetValue(unsigned char, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrk_gpio_set(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simulinkmodeltoblinkLed_step()
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6e]"></a>set_PinFunc(unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, ulib.o(i._Z11set_PinFunchhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = set_PinFunc(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_ConfigPin(PINSEL_CFG_Type*)
</UL>

<P><STRONG><a name="[52]"></a>nrk_gpio_clr(unsigned)</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, ulib.o(i._Z12nrk_gpio_clrj))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrk_gpio_clr(unsigned) &rArr; GPIO_ClearValue(unsigned char, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue(unsigned char, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrk_led_clr(int)
</UL>

<P><STRONG><a name="[54]"></a>nrk_gpio_set(unsigned)</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, ulib.o(i._Z12nrk_gpio_setj))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrk_gpio_set(unsigned) &rArr; GPIO_SetValue(unsigned char, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue(unsigned char, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrk_led_set(int)
</UL>

<P><STRONG><a name="[57]"></a>setupSPIPins()</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, ulib.o(i._Z12setupSPIPinsv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = setupSPIPins() &rArr; PINSEL_ConfigPin(PINSEL_CFG_Type*) &rArr; set_ResistorMode(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_ConfigPin(PINSEL_CFG_Type*)
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_INIT()
</UL>

<P><STRONG><a name="[56]"></a>GPIO_SetValue(unsigned char, unsigned)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ulib.o(i._Z13GPIO_SetValuehj))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_SetValue(unsigned char, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPointer(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrk_gpio_set(unsigned)
</UL>

<P><STRONG><a name="[59]"></a>mrf_read_long(unsigned short)</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, mrf24j40.o(i._Z13mrf_read_longt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = mrf_read_long(unsigned short) &rArr; nrk_spin_wait_us(unsigned) &rArr; wait_us &rArr; us_ticker_read
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrk_spin_wait_us(unsigned)
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mrf_spi_write(unsigned short)
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mrf_cs_set(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_parse_rx_packet()
</UL>

<P><STRONG><a name="[5c]"></a>mrf_spi_write(unsigned short)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, mrf24j40.o(i._Z13mrf_spi_writet))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mrf_write_short(unsigned char, unsigned char)
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mrf_read_short(unsigned char)
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mrf_read_long(unsigned short)
</UL>

<P><STRONG><a name="[5d]"></a>_nrk_scheduler()</STRONG> (Thumb, 620 bytes, Stack size 40 bytes, nrk_scheduler.o(i._Z14_nrk_schedulerv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = _nrk_scheduler() &rArr; nrk_add_to_readyQ(signed char)
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrk_get_high_ready_task_ID()
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrk_kernel_error_add(unsigned char, unsigned char)
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrk_int_disable()
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nrk_high_speed_timer_reset()
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrk_high_speed_timer_wait(unsigned short, unsigned short)
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nrk_high_speed_timer_get()
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nrk_set_next_wakeup(unsigned char)
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nrk_os_timer_get()
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrk_stack_pointer_restore()
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrk_rem_from_readyQ(signed char)
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrk_add_to_readyQ(signed char)
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nrk_timer_tick
</UL>

<P><STRONG><a name="[49]"></a>mrf_read_short(unsigned char)</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, mrf24j40.o(i._Z14mrf_read_shorth))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = mrf_read_short(unsigned char) &rArr; nrk_spin_wait_us(unsigned) &rArr; wait_us &rArr; us_ticker_read
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrk_spin_wait_us(unsigned)
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mrf_spi_write(unsigned short)
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mrf_cs_set(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT3_IRQHandler
</UL>

<P><STRONG><a name="[6a]"></a>setup_uartPins()</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, ulib.o(i._Z14setup_uartPinsv))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = setup_uartPins() &rArr; PINSEL_ConfigPin(PINSEL_CFG_Type*) &rArr; set_ResistorMode(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_ConfigPin(PINSEL_CFG_Type*)
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_INIT()
</UL>

<P><STRONG><a name="[55]"></a>GPIO_ClearValue(unsigned char, unsigned)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ulib.o(i._Z15GPIO_ClearValuehj))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_ClearValue(unsigned char, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPointer(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDEBUG()
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initLED()
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrk_gpio_clr(unsigned)
</UL>

<P><STRONG><a name="[6b]"></a>mrf_write_short(unsigned char, unsigned char)</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, mrf24j40.o(i._Z15mrf_write_shorthh))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = mrf_write_short(unsigned char, unsigned char) &rArr; nrk_spin_wait_us(unsigned) &rArr; wait_us &rArr; us_ticker_read
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrk_spin_wait_us(unsigned)
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mrf_spi_write(unsigned short)
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mrf_cs_set(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_rx_off()
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_rx_on()
</UL>

<P><STRONG><a name="[6c]"></a>nrk_setup_ports()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ulib.o(i._Z15nrk_setup_portsv))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = nrk_setup_ports() &rArr; PORT_INIT() &rArr; initDEBUG() &rArr; PINSEL_ConfigPin(PINSEL_CFG_Type*) &rArr; set_ResistorMode(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_INIT()
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[58]"></a>PINSEL_ConfigPin(PINSEL_CFG_Type*)</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ulib.o(i._Z16PINSEL_ConfigPinP15PINSEL_CFG_Type))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = PINSEL_ConfigPin(PINSEL_CFG_Type*) &rArr; set_ResistorMode(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_OpenDrainMode(unsigned char, unsigned char, unsigned char)
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ResistorMode(unsigned char, unsigned char, unsigned char)
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_PinFunc(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDEBUG()
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initLED()
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_uartPins()
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setupSPIPins()
</UL>

<P><STRONG><a name="[5b]"></a>nrk_spin_wait_us(unsigned)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, nrk_timer.o(i._Z16nrk_spin_wait_usj))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = nrk_spin_wait_us(unsigned) &rArr; wait_us &rArr; us_ticker_read
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_us
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mrf_write_short(unsigned char, unsigned char)
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mrf_read_short(unsigned char)
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mrf_read_long(unsigned short)
</UL>

<P><STRONG><a name="[6f]"></a>set_ResistorMode(unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, ulib.o(i._Z16set_ResistorModehhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = set_ResistorMode(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_ConfigPin(PINSEL_CFG_Type*)
</UL>

<P><STRONG><a name="[66]"></a>_nrk_os_timer_get()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, nrk_timer.o(i._Z17_nrk_os_timer_getv))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nrk_scheduler()
</UL>

<P><STRONG><a name="[64]"></a>nrk_add_to_readyQ(signed char)</STRONG> (Thumb, 170 bytes, Stack size 20 bytes, nrk_task.o(i._Z17nrk_add_to_readyQa))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = nrk_add_to_readyQ(signed char)
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nrk_scheduler()
</UL>

<P><STRONG><a name="[70]"></a>set_OpenDrainMode(unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ulib.o(i._Z17set_OpenDrainModehhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = set_OpenDrainMode(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_ConfigPin(PINSEL_CFG_Type*)
</UL>

<P><STRONG><a name="[4a]"></a>rf_parse_rx_packet()</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, basic_rf.o(i._Z18rf_parse_rx_packetv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = rf_parse_rx_packet() &rArr; rf_rx_off() &rArr; mrf_write_short(unsigned char, unsigned char) &rArr; nrk_spin_wait_us(unsigned) &rArr; wait_us &rArr; us_ticker_read
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mrf_read_long(unsigned short)
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_rx_off()
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_rx_on()
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT3_IRQHandler
</UL>

<P><STRONG><a name="[62]"></a>nrk_rem_from_readyQ(signed char)</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, nrk_task.o(i._Z19nrk_rem_from_readyQa))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrk_rem_from_readyQ(signed char)
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nrk_scheduler()
</UL>

<P><STRONG><a name="[61]"></a>_nrk_set_next_wakeup(unsigned char)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, nrk_timer.o(i._Z20_nrk_set_next_wakeuph))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nrk_scheduler()
</UL>

<P><STRONG><a name="[63]"></a>nrk_kernel_error_add(unsigned char, unsigned char)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, nrk_error.o(i._Z20nrk_kernel_error_addhh))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nrk_scheduler()
</UL>

<P><STRONG><a name="[60]"></a>_nrk_high_speed_timer_get()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, nrk_timer.o(i._Z25_nrk_high_speed_timer_getv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _nrk_high_speed_timer_get()
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nrk_scheduler()
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrk_high_speed_timer_wait(unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[67]"></a>nrk_high_speed_timer_wait(unsigned short, unsigned short)</STRONG> (Thumb, 50 bytes, Stack size 4 bytes, nrk_timer.o(i._Z25nrk_high_speed_timer_waittt))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = nrk_high_speed_timer_wait(unsigned short, unsigned short) &rArr; _nrk_high_speed_timer_get()
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nrk_high_speed_timer_get()
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nrk_scheduler()
</UL>

<P><STRONG><a name="[68]"></a>nrk_stack_pointer_restore()</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, nrk_cpu.o(i._Z25nrk_stack_pointer_restorev))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nrk_scheduler()
</UL>

<P><STRONG><a name="[65]"></a>nrk_get_high_ready_task_ID()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, nrk_task.o(i._Z26nrk_get_high_ready_task_IDv))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nrk_scheduler()
</UL>

<P><STRONG><a name="[5f]"></a>_nrk_high_speed_timer_reset()</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, nrk_timer.o(i._Z27_nrk_high_speed_timer_resetv))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nrk_scheduler()
</UL>

<P><STRONG><a name="[4e]"></a>simulinkmodeltoblinkLed_step()</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, simulinkmodeltoblinkled.o(i._Z28simulinkmodeltoblinkLed_stepv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = simulinkmodeltoblinkLed_step() &rArr; __aeabi_cdcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrk_led_set(int)
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrk_led_clr(int)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_OneStep()
</UL>

<P><STRONG><a name="[81]"></a>simulinkmodeltoblinkLed_initialize()</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, simulinkmodeltoblinkled.o(i._Z34simulinkmodeltoblinkLed_initializev))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[79]"></a>initLED()</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, ulib.o(i._Z7initLEDv))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = initLED() &rArr; PINSEL_ConfigPin(PINSEL_CFG_Type*) &rArr; set_ResistorMode(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_ConfigPin(PINSEL_CFG_Type*)
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue(unsigned char, unsigned)
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir(unsigned char, unsigned, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_INIT()
</UL>

<P><STRONG><a name="[73]"></a>rf_rx_on()</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, basic_rf.o(i._Z8rf_rx_onv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = rf_rx_on() &rArr; mrf_write_short(unsigned char, unsigned char) &rArr; nrk_spin_wait_us(unsigned) &rArr; wait_us &rArr; us_ticker_read
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mrf_write_short(unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_parse_rx_packet()
</UL>

<P><STRONG><a name="[6d]"></a>PORT_INIT()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ulib.o(i._Z9PORT_INITv))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = PORT_INIT() &rArr; initDEBUG() &rArr; PINSEL_ConfigPin(PINSEL_CFG_Type*) &rArr; set_ResistorMode(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDEBUG()
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initLED()
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_uartPins()
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setupSPIPins()
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrk_setup_ports()
</UL>

<P><STRONG><a name="[7a]"></a>initDEBUG()</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, ulib.o(i._Z9initDEBUGv))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = initDEBUG() &rArr; PINSEL_ConfigPin(PINSEL_CFG_Type*) &rArr; set_ResistorMode(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_ConfigPin(PINSEL_CFG_Type*)
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue(unsigned char, unsigned)
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir(unsigned char, unsigned, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_INIT()
</UL>

<P><STRONG><a name="[72]"></a>rf_rx_off()</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, basic_rf.o(i._Z9rf_rx_offv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = rf_rx_off() &rArr; mrf_write_short(unsigned char, unsigned char) &rArr; nrk_spin_wait_us(unsigned) &rArr; wait_us &rArr; us_ticker_read
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mrf_write_short(unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_parse_rx_packet()
</UL>

<P><STRONG><a name="[43]"></a>__user_setup_stackheap</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stackheap.o(i.__user_setup_stackheap))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[3d]"></a>_nrk_timer_tick</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, nrk.o(i._nrk_timer_tick))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = _nrk_timer_tick &rArr; _nrk_scheduler() &rArr; nrk_add_to_readyQ(signed char)
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nrk_scheduler()
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrk_cpu.o(i._Z25nrk_stack_pointer_restorev)
</UL>
<P><STRONG><a name="[48]"></a>exit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, exit.c.lpc1768.arm.o(i.exit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = exit &rArr; mbed_die &rArr; wait_ms &rArr; us_ticker_read
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;semihost_exit
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed_die
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[7d]"></a>gpio_output</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, gpio_api.c.lpc1768.arm.o(i.gpio_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gpio_output
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pin_mode
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pin_function
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed_die
</UL>

<P><STRONG><a name="[83]"></a>gpio_write</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gpio_api.c.lpc1768.arm.o(i.gpio_write))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed_die
</UL>

<P><STRONG><a name="[47]"></a>main</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = main &rArr; rt_OneStep() &rArr; simulinkmodeltoblinkLed_step() &rArr; __aeabi_cdcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrk_led_set(int)
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrk_setup_ports()
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simulinkmodeltoblinkLed_initialize()
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simulinkmodeltoblinkLed_terminate()
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_OneStep()
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[7c]"></a>mbed_die</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, utils_api.c.lpc1768.arm.o(i.mbed_die))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = mbed_die &rArr; wait_ms &rArr; us_ticker_read
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_ms
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_write
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[7e]"></a>pin_function</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, pinmap.c.lpc1768.arm.o(i.pin_function))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output
</UL>

<P><STRONG><a name="[7f]"></a>pin_mode</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, pinmap.c.lpc1768.arm.o(i.pin_mode))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output
</UL>

<P><STRONG><a name="[7b]"></a>semihost_exit</STRONG> (Thumb, 12 bytes, Stack size 16 bytes, semihost_api.c.lpc1768.arm.o(i.semihost_exit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = semihost_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[88]"></a>timer_frequency</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, timer_api.c.lpc1768.arm.o(i.timer_frequency))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;us_ticker_read
</UL>

<P><STRONG><a name="[87]"></a>timer_init</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, timer_api.c.lpc1768.arm.o(i.timer_init))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;us_ticker_read
</UL>

<P><STRONG><a name="[89]"></a>timer_read</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, timer_api.c.lpc1768.arm.o(i.timer_read))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;us_ticker_read
</UL>

<P><STRONG><a name="[85]"></a>timer_start</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, timer_api.c.lpc1768.arm.o(i.timer_start))
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_start
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;us_ticker_read
</UL>

<P><STRONG><a name="[86]"></a>us_ticker_read</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, us_ticker_api.c.lpc1768.arm.o(i.us_ticker_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = us_ticker_read
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_start
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_read
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_frequency
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_us
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_ms
</UL>

<P><STRONG><a name="[84]"></a>wait_ms</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, wait_api.c.lpc1768.arm.o(i.wait_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = wait_ms &rArr; us_ticker_read
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;us_ticker_read
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed_die
</UL>

<P><STRONG><a name="[71]"></a>wait_us</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, wait_api.c.lpc1768.arm.o(i.wait_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = wait_us &rArr; us_ticker_read
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;us_ticker_read
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrk_spin_wait_us(unsigned)
</UL>

<P><STRONG><a name="[b3]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)

<P><STRONG><a name="[8a]"></a>_dadd</STRONG> (Thumb, 332 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
</UL>

<P><STRONG><a name="[8f]"></a>__fpl_dcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dcmpi.o(x$fpl$dcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL>

<P><STRONG><a name="[76]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, deqf.o(x$fpl$deqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simulinkmodeltoblinkLed_step()
</UL>

<P><STRONG><a name="[8e]"></a>_dcmpeq</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, deqf.o(x$fpl$deqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>

<P><STRONG><a name="[74]"></a>__aeabi_i2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simulinkmodeltoblinkLed_step()
</UL>

<P><STRONG><a name="[b4]"></a>_dflt</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[75]"></a>__aeabi_cdcmple</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simulinkmodeltoblinkLed_step()
</UL>

<P><STRONG><a name="[90]"></a>_dcmple</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>

<P><STRONG><a name="[92]"></a>__fpl_dcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drcmple
</UL>

<P><STRONG><a name="[8d]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[8c]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[78]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simulinkmodeltoblinkLed_step()
</UL>

<P><STRONG><a name="[91]"></a>_drcmple</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmple_InfNaN
</UL>

<P><STRONG><a name="[77]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simulinkmodeltoblinkLed_step()
</UL>

<P><STRONG><a name="[93]"></a>_dsub</STRONG> (Thumb, 464 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[50]"></a>GPIO_GetPointer(unsigned char)</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, ulib.o(i._Z15GPIO_GetPointerh))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue(unsigned char, unsigned)
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue(unsigned char, unsigned)
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir(unsigned char, unsigned, unsigned char)
</UL>

<P><STRONG><a name="[94]"></a>_dadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
</UL>

<P><STRONG><a name="[8b]"></a>_dsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
